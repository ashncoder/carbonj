# test aggregation rules

# rules use carbon-inputQueue syntax with one extention - to indicate that original metric should be dropped include "drop"
# Only (60) is supported for now.

# ocapi
ocapi.<metric>.mean (60) drop = avg pod[0-9]{1,2}.ecom.*.*.*.*.ocapi.<<metric>>.mean
ocapi.<metric>.p95 (60) drop = avg pod[0-9]{1,2}.ecom.*.*.*.*.ocapi.<<metric>>.p95
ocapi.<metric>.min (60) drop = avg pod[0-9]{1,2}.ecom.*.*.*.*.ocapi.<<metric>>.min
ocapi.<metric>.max (60) drop = avg pod[0-9]{1,2}.ecom.*.*.*.*.ocapi.<<metric>>.max
ocapi.<metric> (60)  drop = sum pod[0-9]{1,2}.ecom.*.*.*.*.ocapi.<<metric>>

# ecom_ag (avg)
<pod>.ecom_ag.<realm>.<tenant>.<metric>.mean (60) = avg <pod>.ecom.<realm>.<tenant>.*.*.<<metric>>.mean
<pod>.ecom_ag.<realm>.<tenant>.<metric>.p95 (60) = avg <pod>.ecom.<realm>.<tenant>.*.*.<<metric>>.p95
<pod>.ecom_ag.<realm>.<tenant>.<metric>.min (60) = avg <pod>.ecom.<realm>.<tenant>.*.*.<<metric>>.min
<pod>.ecom_ag.<realm>.<tenant>.<metric>.max (60) = avg <pod>.ecom.<realm>.<tenant>.*.*.<<metric>>.max
<pod>.ecom_ag.<realm>.<tenant>.<metric> (60) = sum <pod>.ecom.<realm>.<tenant>.*.*.<<metric>>


pi.subgroup.<metric> (60) c = avg pi.abc.<<metric>>
pi.subgroup2.<metric> (60) c drop = avg pi.xyz.<<metric>>
pi.<metric> (60) drop = avg pi.<group>.<<metric>>